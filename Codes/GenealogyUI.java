/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mavenproject1.ggui;

import static com.mycompany.mavenproject1.ggui.FileListInDir.RecursiveFileFinder;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
//import static com.mycompany.mavenproject1.ggui.ReportKin;
import java.awt.HeadlessException;
import java.awt.Image;
//import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.concurrent.Executor;
import java.util.concurrent.TimeUnit;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import org.openide.util.Exceptions;
import org.openide.util.ImageUtilities;
// import org.openide.util;
import java.util.Date;

/**
 *
 * @author xuewen
 */
public class GenealogyUI extends javax.swing.JFrame {

    /**
     * Creates new form GenealogyUI
     */
    public GenealogyUI() {
        initComponents();
        setIcon();
        jButton4.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GKin build20211124");
        setPreferredSize(new java.awt.Dimension(1100, 700));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gkin.png"))); // NOI18N
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setMaximumSize(new java.awt.Dimension(291, 300));
        jLabel4.setMinimumSize(new java.awt.Dimension(291, 300));
        jLabel4.setPreferredSize(new java.awt.Dimension(291, 300));
        jPanel2.add(jLabel4, java.awt.BorderLayout.PAGE_START);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("<html><body style='text-align: center'>Genealogy Kinship Software<br> <br> <br>Center of Human Identification<br> <br>University of North Texas Health Science Center");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel2.add(jLabel7, java.awt.BorderLayout.CENTER);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Copyright reserved since 2021");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel9.setMaximumSize(new java.awt.Dimension(188, 50));
        jLabel9.setMinimumSize(new java.awt.Dimension(188, 50));
        jLabel9.setPreferredSize(new java.awt.Dimension(188, 50));
        jPanel2.add(jLabel9, java.awt.BorderLayout.PAGE_END);

        jTabbedPane1.addTab("Welcome", jPanel2);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Input files", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel8.setText("Temp");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Sample");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Reference");

        jButton1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton1.setText("Browse");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton2.setText("Browse");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField2.setForeground(new java.awt.Color(153, 153, 153));
        jTextField2.setText("Index");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setText(".bcf");

        jTextField5.setBackground(new java.awt.Color(238, 237, 237));
        jTextField5.setForeground(new java.awt.Color(153, 153, 153));
        jTextField5.setText("sample_Index");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel6.setText("(Auto)");

        jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTextField2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTextField5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)
                        .addComponent(jTextField1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField5)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)))))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(32, 32, 32))
        );

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Running message");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setText("Run");
        jButton4.setToolTipText("Select input files first before run");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 102, 255));
        jButton5.setText("Demo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jProgressBar1.setForeground(new java.awt.Color(51, 255, 102));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jLayeredPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(99, 99, 99)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel3)
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Kinship analyzer", jPanel1);

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextArea3.setRows(5);
        jTextArea3.setText("Genealogy Kinship Analyzer software\nversion: 0.2\nYear: 2021, Nov, 24th\n\nMajor function:\n\t1) Mouse click only to run all analyses;\n\t2) Kinship analysis: kin-coefficient, relationship prediction for all pairs;\n\t3) Graphic display results in table;\n\t4) Interactive data filtering, sorting, relationship prediction, grouping and more;\n\t5) Dynamically plot distribution and prediction curves for each degree of a given case;\n                     6) Report and export results\n\n\nInput:\n      1) a file with the genetic variance SNP in bcf format from a case individual\n      2) a file with a list of variance .bcf files of reference individuals \n\nUsage: \n     1) Select a variance file and a list file for reference from your computer\n     2) Push the buttom \"Run\" to go\n     A quick start: just push \"demo\" button\n\nDevelopers:\n           Dr. Xuewen Wang (Genealogy Kinship software)\n           Prof. Jianye Ge (Project designer, Genealogy Kinship software)\n           Dr. Meng huang (King_robust coefficient API)\n           ...\n\nContact: Xuewen Wang\nEmail: xuewen.wang@unthsc.edu");
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1051, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("About", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("GKin build202101026");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //Here is to show usage of the demon dataset
        String winfilepath = java.lang.System.getProperty("user.dir");
        String appDirParent= winfilepath.replaceAll("\\\\app",""); //C:\\genealogy\\genealogyUI_test
        jTextField1.setText("C:\\NetBeansProjects\\mavenproject1\\realData\\7035.bcf");
        String sample=jTextField1.getText();
        jTextField2.setText("C:\\NetBeansProjects\\mavenproject1\\realData\\refList1.txt");
        String ref=jTextField2.getText();
        String dataBaseFilename=jTextField2.getText();
        String[] splitcells=dataBaseFilename.split("\\\\");
            dataBaseFilename=splitcells[splitcells.length-1];
            String kinOutPath=sample+"_"+dataBaseFilename; //prefix is enough, +".king.txt"
            kinOutPath=kinOutPath.replaceAll("\\.txt$", ""); //remove the .txt from the dataBaseFilename
            Date date = new Date();
            timeMilli = date.getTime();
            kinOutPath=kinOutPath+ timeMilli;
            jTextField5.setText(kinOutPath);

            String apiPath = java.lang.System.getProperty("user.dir");
            apiPath=apiPath+File.separator;
            String kinOutTempPath=caseSamplePath+"KinTmp"+File.separator;
            File KinTmpPath=new File(kinOutTempPath);
            KinTmpPath.mkdir();


            int maxRef=refFileListCount();
            jTextArea1.setText("Running statement:\nNumber of reference\t"+maxRef+"\n");
            String sampleNameSelectNosuffix="sample1.bcf".replace(".bcf", "");
            jTextArea1.setText("Running statement:\nSample\t"+sampleNameSelectNosuffix+"\nNumber of reference\t"+maxRef+"\n");
            jTextArea1.append("To calculate kincoefficient from genetic variant data.\n");
            jTextArea1.append("\nProgram starts running...\nDemo completed.");
            //  call report module

                //progress
                jProgressBar1.setMinimum(0);
                jProgressBar1.setMaximum(1);
                jProgressBar1.setValue(1);
                jProgressBar1.setStringPainted(true);
                jProgressBar1.setForeground(Color.black); //for string

                javax.swing.JOptionPane.showMessageDialog(this,"Done Kincoefficient caculation!\nView results");

                String inKingFile=appDirParent+"\\Settings\\example_kingOut.txt";
                new ReportTable(inKingFile).setVisible(true);
                
                //reset input box
                jTextField1.setText(".bcf");
                jTextField2.setText("Index");
                
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //disable the button till finished this run
        disableRun();
        
        int maxRef=refFileListCount();
        if(maxRef ==0 || jTextField1.getText().equals(".bcf")){
            javax.swing.JOptionPane.showMessageDialog(this, "Please select files\n Make sure reference list is not empty.");
        }else{

            jProgressBar1.setMinimum(0);
            jProgressBar1.setMaximum(maxRef);
            jProgressBar1.setValue(0);
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setForeground(Color.black); //for string
            //call thread to loop 1to1King robust
            Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
            executor.execute(
                (new Runnable() {
                    @Override
                    public void run() {
                        king1to1Loop(maxRef);
                    }
                }
            )
        );

        }
        
        }

        private int refFileListCount(){
            String mergedbcf=jTextField2.getText();
            int maxRef=0;
            Path path = Paths.get(mergedbcf);
            try {
                maxRef = (int) Files.lines(path).count();
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            }
            return maxRef;

        }

        private void king1to1Loop(int maxRefCt){
            // this module is to call and loop king_chi 1:1
            String sample; //="C:\\Users\\xw0148\\Downloads\\genealogyUI_test\\Test1_g1.b1.i1.bcf";
            String mergedbcf; //="C:\\Users\\xw0148\\Downloads\\genealogyUI_test\\list3.txt";

            //get input
            sample=jTextField1.getText();
            mergedbcf=jTextField2.getText();

            //check input files
            if(sample.equals(".bcf") || mergedbcf.equals("Index")){
                javax.swing.JOptionPane.showMessageDialog(this, "Please select input files.");
            }else{
                int refcount=0;

                //set log window
                jTextArea1.setLineWrap(true);
                jTextArea1.setCaretPosition(jTextArea1.getText().length());
                String sampleNameSelectNosuffix=sampleNameSelect.replace(".bcf", "");
                jTextArea1.setText("Running statement:\nSample\t"+sampleNameSelectNosuffix+"\nNumber of reference\t"+maxRefCt+"\n");
                String kinOutPath=jTextField5.getText(); //prefix is enough, +".king.txt"
                String kinOutfile=kinOutPath+".king.txt";
                ArrayList<String> kinValuesArray=new ArrayList<String>();

                // king-robust loopListfile
                try{ // get data from ref list
                    FileReader read2 = new FileReader(mergedbcf);
                    Scanner scan = new Scanner(read2);
                    int rct=1; //row autoID

                    jTextArea1.append("\nTo calculate kincoefficient from genetic variant data\nProgram starts running...\n");

                    while(scan.hasNextLine()){
                        String ref=scan.nextLine();
                        ref=ref.strip();
                        if(ref.length() > 0){

                            //ignore empty row
                            kinCalulate(sample, ref, refcount); //Calculate the kin value, saved output into file
                            refcount += 1;
                            String kinval=kinValue(kinOutfile);
                            kinValuesArray.add(kinval);
                            refCurrentCount=refcount;
                            jProgressBar1.setValue(refCurrentCount);
                            TimeUnit.SECONDS.sleep(1);

                        }

                    }
                    scan.close();
                    jTextArea1.append("Done kincoefficient caculation! \n");
                }
                catch(FileNotFoundException e){
                    JOptionPane.showMessageDialog(this, "error: "+e);
                } catch (InterruptedException ex) {
                    Exceptions.printStackTrace(ex);
                }

                //  save raw kinvalue
                kinOutPath=kinOutPath.replace(String.valueOf(timeMilli), "");
                String kingRawResult=kinOutPath+".kingRaw.txt";
                try (FileWriter out = new FileWriter(kingRawResult)) {
                    out.write(kinHeaderline);
                        for (int k=0; k<kinValuesArray.size(); k++){
                            out.write(kinValuesArray.get(k));
                        }
                        jTextArea1.append("\nSaved raw kincoefficient in the file:\n"+kingRawResult+"\n");
                        out.close();
                        javax.swing.JOptionPane.showMessageDialog(this, "View results");
                    }
                    catch (IOException e) {
                        JOptionPane.showMessageDialog(this, e);
                    }

                    //  call report module
                    kingRawResult=kingRawResult.replaceAll("\\\\", "\\\\\\\\"); //C:\\

                        new ReportTable(kingRawResult).setVisible(true);
                        //new AllDataGUI();

                    }
                    // return refCurrentCount;
                }

                String appDir=""; //global
                private void kinCalulate(String sample, String ref, int refcount){
                    java.io.BufferedReader bufreader1to1 = null;

                    String kinOutPath=jTextField5.getText(); //prefix is enough, +".king.txt"
                    String apiPath = java.lang.System.getProperty("user.dir");
                    apiPath=apiPath+File.separator;
                    String app=apiPath+"king_chi.exe";
                    String kinOutTempPath=caseSamplePath+"KinTmp"+File.separator;
                    File KinTmpPath=new File(kinOutTempPath);
                    KinTmpPath.mkdir();


                    String que=" --file "+sample+" --data "+ref+" --module 1 "+" --out "+kinOutPath+" "+" --path_app "+apiPath+" --path_temp "+kinOutTempPath+"\n";


                    File appfile = new File(app);
                    boolean existsapp = appfile.exists();
                    if ( ! existsapp) {
                        javax.swing.JOptionPane.showMessageDialog(this, "Application King component is missing."+app);

                    }else{

                        java.util.Properties pp = System.getProperties();
                        String os = pp.getProperty("os.name");
                        if (os.startsWith("win")||os.startsWith("Win"))
                        {
                            //os = win
                            String winfilepath = java.lang.System.getProperty("user.dir");
                            appDir=winfilepath;
                            jTextArea1.paintImmediately(jTextArea1.getBounds());
                            try
                            {
                                String wincmd = app+ que;
                                Process winproc = Runtime.getRuntime().exec("cmd /c " + wincmd);
                                if (winproc != null)
                                {
                                    jTextArea1.paintImmediately(jTextArea1.getBounds());
                                    winproc.waitFor();
                                    String winline = null;
                                    bufreader1to1 = new java.io.BufferedReader(new java.io.InputStreamReader(winproc.getInputStream(),"GB2312"));
                                    //javax.swing.JOptionPane.showMessageDialog(null, bufreader);
                                    while (bufreader1to1 != null && (winline = bufreader1to1.readLine()) !=null)
                                    {
                                        jTextArea1.append(winline + "\n");
                                        jTextArea1.paintImmediately(jTextArea1.getBounds());
                                    }

                                }
                                else
                                {
                                    jTextArea1.append("\nLoading file failed!\n");
                                    jTextArea1.paintImmediately(jTextArea1.getBounds());
                                }
                            }
                            catch(IOException | InterruptedException | HeadlessException e)
                            {
                                jTextArea1.append("\nLoading file failed!\n");
                                jTextArea1.paintImmediately(jTextArea1.getBounds());
                            }
                        }
                        else
                        {
                            javax.swing.JOptionPane.showMessageDialog(this, "Your operation system can't be recognized.\n"
                                + "Please contact us to test your system!");

                        }
                    }
                    // refcount +=1;
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        javax.swing.JFileChooser filechooser = new javax.swing.JFileChooser("C:\\genealogy");
        filechooser.showOpenDialog(this);
        java.io.File selectFile = filechooser.getSelectedFile();
        if (selectFile == null)
        {
            javax.swing.JOptionPane.showMessageDialog(this,"You haven't selected any new file!");
        }
        else
        {
            String filepath = selectFile.getPath();
            dataBaseFilename = selectFile.getName();
            if(filepath.contains(" "))
            {
                javax.swing.JOptionPane.showMessageDialog(this,"Path contains spaces, please remove the space and try again!");
            }
            else {
                jTextField2.setText(filepath);}
        }
        // for auto output prefix
        String    sample=jTextField1.getText();
        //String samplename=sample; //get file path
        String kinOutPath=sample+"_"+dataBaseFilename; //prefix is enough, +".king.txt"
        Date date = new Date();
        timeMilli = date.getTime();
        kinOutPath=kinOutPath.replaceAll("\\.txt$", ""); //remove the .txt from the dataBaseFilename
        kinOutPath=kinOutPath+timeMilli;
        jTextField5.setText(kinOutPath);
        
        if( ! (jTextField1.getText().equals(".bcf") || jTextField2.getText().equals("Index")) ){
           jButton4.setEnabled(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    String sampleNameSelect="";
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        javax.swing.JFileChooser filechooser = new javax.swing.JFileChooser("C:\\genealogy");
        filechooser.showOpenDialog(this);
        java.io.File selectFile = filechooser.getSelectedFile();
        if (selectFile == null)
        {
            javax.swing.JOptionPane.showMessageDialog(this,"You haven't selected any new file!!");
        }
        else
        {
            String filepath = selectFile.getPath();
            sampleNameSelect=selectFile.getName();
            caseSamplePath=filepath.replace(sampleNameSelect,"");

            if(filepath.contains(" "))
            {
                javax.swing.JOptionPane.showMessageDialog(this,"Path contains spaces, please remove the space and try again!");
            }
            else if(! filepath.endsWith("bcf") ){
                javax.swing.JOptionPane.showMessageDialog(this,"File should be in .bcf format");
            }else {
                jTextField1.setText(filepath);}

            //set output file if ref is already there
            if( ! jTextField2.getText().equals("Index")){
                // for auto output prefix
                String sample=jTextField1.getText();
                String dataBaseFilename=jTextField2.getText();
                String[] splitcells=dataBaseFilename.split("\\\\");
                    dataBaseFilename=splitcells[splitcells.length-1];
                    String kinOutPath=sample+"_"+dataBaseFilename; //prefix is enough, +".king.txt"
                    Date date = new Date();
                    timeMilli = date.getTime();
                    kinOutPath=kinOutPath.replaceAll("\\.txt$", ""); //remove the .txt from the dataBaseFilename
                    kinOutPath=kinOutPath+String.valueOf(timeMilli);
                    jTextField5.setText(kinOutPath);
                }
            }
        if( ! (jTextField1.getText().equals(".bcf") || jTextField2.getText().equals("Index")) ){
            jButton4.setEnabled(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void disableRun() {                                      
        // TODO add your handling code here:
        jButton4.setEnabled(false);
    }
    
    long timeMilli=0L;
    //setup progress    
    int refCurrentCount=0;
    //JProgressBar progressBar1;

    private static void barColorSetup(){
            //control the color of progress bar
            UIManager.put("ProgressBar.background", Color.LIGHT_GRAY);
            UIManager.put("ProgressBar.foreground", Color.GREEN);
            UIManager.put("ProgressBar.selectionBackground", Color.YELLOW);   
            UIManager.put("ProgressBar.selectionForeground", Color.BLUE);
    }
    
       
    String kinHeaderline="";
    private String dataBaseFilename;
    String caseSamplePath="";
private String kinValue(String oneKinOutfile){
    String outKinValue="";
    
        try{ // get data from file
            FileReader read2 = new FileReader(oneKinOutfile);
            try (Scanner scan = new Scanner(read2)) {
                 int rct=1; //row autoID
                 while (scan.hasNextLine()) {
                    String kin=scan.nextLine()+"\n";
                    if( kin.startsWith("#") ){
                        kinHeaderline=kin;
                    }else if( kin.length()>0 ){
                        outKinValue=kin;
                    }else{
                    }
                 }
            } 
                    
        }catch(FileNotFoundException e){
            JOptionPane.showMessageDialog(this, "error: "+e);
        }
                    
            File oneKo=new File(oneKinOutfile);
            if(oneKo.exists()){
                 boolean delOneKo=oneKo.delete();
            }
                    
                    
    return outKinValue;
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenealogyUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenealogyUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenealogyUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenealogyUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                 barColorSetup(); 
                new GenealogyUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
 private void setIcon() {

         setIconImage((Image) makeIcon("Gkin.png"));
    }
 
  private static Icon makeIcon(String iconBase) {
      return ImageUtilities.image2Icon(
             ImageUtilities.loadImageIcon(iconBase, false).getImage());
  }
  
}
